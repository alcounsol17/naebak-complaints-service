# Generated by Django 4.2.7 on 2025-09-22 13:13

import complaints.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='معرف الشكوى')),
                ('citizen_id', models.PositiveIntegerField(help_text='معرف المواطن من خدمة المصادقة', verbose_name='معرف المواطن')),
                ('citizen_name', models.CharField(help_text='اسم المواطن (مخزن محلياً للأداء)', max_length=255, verbose_name='اسم المواطن')),
                ('citizen_email', models.EmailField(max_length=254, verbose_name='بريد المواطن الإلكتروني')),
                ('title', models.CharField(help_text='عنوان مختصر للشكوى', max_length=200, verbose_name='عنوان الشكوى')),
                ('content', models.TextField(help_text='وصف تفصيلي للشكوى (حد أقصى 1500 حرف)', validators=[django.core.validators.MaxLengthValidator(1500)], verbose_name='محتوى الشكوى')),
                ('youtube_link', models.URLField(blank=True, help_text='رابط فيديو يوتيوب اختياري لتوضيح الشكوى', null=True, verbose_name='رابط يوتيوب')),
                ('status', models.CharField(choices=[('pending', 'في الانتظار'), ('assigned', 'مُوجهة لنائب'), ('accepted', 'مقبولة'), ('rejected', 'مرفوضة'), ('on_hold', 'معلقة للدراسة'), ('resolved', 'محلولة'), ('closed', 'مغلقة')], default='pending', max_length=20, verbose_name='حالة الشكوى')),
                ('priority', models.CharField(choices=[('low', 'منخفضة'), ('medium', 'متوسطة'), ('high', 'عالية'), ('urgent', 'عاجلة')], default='medium', max_length=10, verbose_name='أولوية الشكوى')),
                ('assigned_representative_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='معرف النائب المُكلف')),
                ('assigned_representative_name', models.CharField(blank=True, max_length=255, verbose_name='اسم النائب المُكلف')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الإسناد')),
                ('assigned_by_admin_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='معرف الأدمن المُسند')),
                ('admin_response', models.TextField(blank=True, help_text='رد الإدارة على الشكوى', verbose_name='رد الإدارة')),
                ('representative_response', models.TextField(blank=True, help_text='رد النائب على الشكوى', verbose_name='رد النائب')),
                ('resolution', models.TextField(blank=True, help_text='الحل النهائي للشكوى', verbose_name='الحل المقترح')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الحل')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ آخر تحديث')),
                ('hold_until', models.DateTimeField(blank=True, help_text='تاريخ انتهاء فترة التعليق (3 أيام)', null=True, verbose_name='معلقة حتى')),
                ('is_public', models.BooleanField(default=False, help_text='هل يمكن عرض هذه الشكوى للعامة؟', verbose_name='شكوى عامة')),
                ('reference_number', models.CharField(blank=True, help_text='رقم مرجعي فريد للشكوى', max_length=20, unique=True, verbose_name='رقم المرجع')),
                ('points_awarded', models.BooleanField(default=False, help_text='هل تم منح النقاط للنائب عند حل هذه الشكوى؟', verbose_name='تم منح النقاط')),
                ('thank_you_message', models.TextField(blank=True, help_text='رسالة الشكر التي ستظهر في قسم الإنجازات', verbose_name='رسالة الشكر للنائب')),
            ],
            options={
                'verbose_name': 'شكوى',
                'verbose_name_plural': 'الشكاوى',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='اسم التصنيف')),
                ('description', models.TextField(blank=True, verbose_name='وصف التصنيف')),
                ('color', models.CharField(default='#007bff', help_text='كود اللون بصيغة HEX', max_length=7, verbose_name='لون التصنيف')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'تصنيف الشكوى',
                'verbose_name_plural': 'تصنيفات الشكاوى',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='عنوان القالب')),
                ('content', models.TextField(verbose_name='محتوى القالب')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='عدد مرات الاستخدام')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.complaintcategory', verbose_name='التصنيف')),
            ],
            options={
                'verbose_name': 'قالب شكوى',
                'verbose_name_plural': 'قوالب الشكاوى',
                'ordering': ['-usage_count', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'تم إنشاء الشكوى'), ('assigned', 'تم إسناد الشكوى'), ('accepted', 'تم قبول الشكوى'), ('rejected', 'تم رفض الشكوى'), ('on_hold', 'تم تعليق الشكوى'), ('resolved', 'تم حل الشكوى'), ('closed', 'تم إغلاق الشكوى'), ('response_added', 'تم إضافة رد'), ('attachment_added', 'تم إضافة مرفق'), ('status_changed', 'تم تغيير الحالة'), ('priority_changed', 'تم تغيير الأولوية'), ('points_awarded', 'تم منح النقاط للنائب')], max_length=50, verbose_name='نوع الإجراء')),
                ('description', models.TextField(verbose_name='وصف الإجراء')),
                ('performed_by_id', models.PositiveIntegerField(verbose_name='معرف المنفذ')),
                ('performed_by_name', models.CharField(max_length=255, verbose_name='اسم المنفذ')),
                ('performed_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ التنفيذ')),
                ('additional_data', models.JSONField(blank=True, help_text='بيانات إضافية مرتبطة بالإجراء', null=True, verbose_name='بيانات إضافية')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='complaints.complaint', verbose_name='الشكوى')),
            ],
            options={
                'verbose_name': 'سجل الشكوى',
                'verbose_name_plural': 'سجلات الشكاوى',
                'ordering': ['-performed_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=complaints.models.complaint_attachment_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'pdf', 'doc', 'docx'])], verbose_name='الملف')),
                ('file_type', models.CharField(choices=[('image', 'صورة'), ('pdf', 'مستند PDF'), ('word', 'مستند Word'), ('other', 'أخرى')], max_length=10, verbose_name='نوع الملف')),
                ('original_name', models.CharField(max_length=255, verbose_name='الاسم الأصلي للملف')),
                ('file_size', models.PositiveIntegerField(verbose_name='حجم الملف (بايت)')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الرفع')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='وصف الملف')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='complaints.complaint', verbose_name='الشكوى')),
            ],
            options={
                'verbose_name': 'مرفق شكوى',
                'verbose_name_plural': 'مرفقات الشكاوى',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='complaint',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='complaints.complaintcategory', verbose_name='التصنيف'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['status'], name='complaints__status_7c8de0_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['citizen_id'], name='complaints__citizen_ab5ede_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['assigned_representative_id'], name='complaints__assigne_3d6fe6_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['created_at'], name='complaints__created_805464_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['priority'], name='complaints__priorit_f4170d_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['reference_number'], name='complaints__referen_08a149_idx'),
        ),
    ]
